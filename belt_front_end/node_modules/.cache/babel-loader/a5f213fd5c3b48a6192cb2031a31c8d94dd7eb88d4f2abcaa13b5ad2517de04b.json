{"ast":null,"code":"var _jsxFileName = \"/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/components/DoctorDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ListingElement from './ListingElement';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorDashboard = () => {\n  _s();\n  const [displayedPositions, updateDisplayedPositions] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const LoadPositions = async () => {\n      try {\n        const config1 = {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Accept': 'application/vnd.api+json',\n            'Content-Type': 'application/vnd.api+json'\n          }\n        };\n        const doctorResponse = await axios.get('http://localhost:8000/api/getProfile', config1);\n        const myDoctor = doctorResponse.data.data.doctor;\n        const config2 = {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Accept': 'application/vnd.api+json',\n            'Content-Type': 'application/vnd.api+json'\n          },\n          params: {\n            \"id\": myDoctor.id\n          }\n        };\n        const applicationResponse = await axios.get('http://localhost:8000/api/doctor/positions/all', config2);\n        const data = applicationResponse.data;\n        if (data.status === \"Request was successful\") {\n          const tmp = [];\n          const positions = data.data.positions;\n          for (let i = 0; i < positions.length; i++) {\n            let exists = false;\n            for (let j = 0; j < displayedPositions.length; j++) {\n              if (displayedPositions[j].id === positions[i].id) {\n                exists = true;\n                break;\n              }\n            }\n            if (!exists && positions[i].status === \"OPEN\") {\n              tmp.push({\n                \"id\": positions[i].id,\n                \"name\": positions[i].name,\n                \"discipline\": positions[i].medical_discipline,\n                \"status\": positions[i].status\n              });\n            }\n          }\n          if (tmp.length > 0) {\n            updateDisplayedPositions(tmp);\n          }\n        }\n      } catch (error) {}\n    };\n    LoadPositions();\n  });\n  const newPosting = () => {\n    navigate(\"../doctor/position/create\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-75 h-100 container container-default\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-success btn-trim mb-4\",\n      onClick: newPosting,\n      children: \"New Posting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group bg-light overflow-auto\",\n      children: displayedPositions.map((position, i) => /*#__PURE__*/_jsxDEV(ListingElement, {\n        name: position.name,\n        application_id: position.id\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(DoctorDashboard, \"TtmQXewlqbXpM3h9/dHYxtkz2dM=\", false, function () {\n  return [useNavigate];\n});\n_c = DoctorDashboard;\nexport default DoctorDashboard;\nvar _c;\n$RefreshReg$(_c, \"DoctorDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","ListingElement","axios","jsxDEV","_jsxDEV","DoctorDashboard","_s","displayedPositions","updateDisplayedPositions","navigate","LoadPositions","config1","headers","localStorage","getItem","doctorResponse","get","myDoctor","data","doctor","config2","params","id","applicationResponse","status","tmp","positions","i","length","exists","j","push","name","medical_discipline","error","newPosting","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","position","application_id","_c","$RefreshReg$"],"sources":["/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/components/DoctorDashboard.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ListingElement from './ListingElement'\nimport axios from 'axios';\n\nconst DoctorDashboard = () => {\n    const [displayedPositions, updateDisplayedPositions] = useState([]);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const LoadPositions = async () => {\n            try {\n                const config1 = {\n                    headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                        'Accept': 'application/vnd.api+json',\n                        'Content-Type': 'application/vnd.api+json'\n                    }\n                }\n    \n                const doctorResponse = await axios.get('http://localhost:8000/api/getProfile', config1);\n                const myDoctor = doctorResponse.data.data.doctor;\n    \n                const config2 = {\n                    headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                        'Accept': 'application/vnd.api+json',\n                        'Content-Type': 'application/vnd.api+json'\n                    },\n    \n                    params: {\n                        \"id\": myDoctor.id\n                    }\n                }\n    \n                const applicationResponse = await axios.get('http://localhost:8000/api/doctor/positions/all', config2);\n                const data = applicationResponse.data;\n    \n                if (data.status === \"Request was successful\") {\n                    const tmp = [];\n                    const positions = data.data.positions;\n    \n                    for (let i = 0; i < positions.length; i++) {\n                        let exists = false;\n    \n                        for (let j = 0; j < displayedPositions.length; j++) {\n                            if (displayedPositions[j].id === positions[i].id) {\n                                exists = true;\n                                break;\n                            }\n                        }\n    \n                        if (!exists && positions[i].status === \"OPEN\") {\n                            tmp.push({\n                                \"id\": positions[i].id,\n                                \"name\": positions[i].name,\n                                \"discipline\": positions[i].medical_discipline,\n                                \"status\": positions[i].status\n                            });\n                        }\n                    }\n    \n                    if (tmp.length > 0) {\n                        updateDisplayedPositions(tmp);\n                    }\n                }\n            } catch(error) {\n    \n            }\n        }\n        \n        LoadPositions();\n    });\n\n    const newPosting = () => {\n        navigate(\"../doctor/position/create\");\n    }\n\n    return(\n        <div className=\"w-75 h-100 container container-default\">\n            <h1>Dashboard</h1>\n            <button className=\"btn btn-success btn-trim mb-4\" onClick={newPosting}>New Posting</button>\n            <ul className=\"list-group bg-light overflow-auto\">\n                {displayedPositions.map((position, i) => (\n                    <ListingElement name={position.name} application_id={position.id} key={i}/>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default DoctorDashboard\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}