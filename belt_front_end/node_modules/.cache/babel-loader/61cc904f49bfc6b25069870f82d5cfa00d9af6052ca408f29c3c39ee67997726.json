{"ast":null,"code":"var _jsxFileName = \"/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/services/AuthProvider.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [authToken, setAuthToken] = useState(localStorage.getItem('authToken'));\n  const [userType, setUserType] = useState(null); // Add userType to manage different user roles\n  const navigate = useNavigate();\n  const login = async (email, password, navigate) => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('userId', user.id);\n      setAuthToken(token);\n\n      // Directly determine user type after login\n      // Note: You might want to adjust this based on how you manage user roles\n      const profileResponse = await axios.get('http://localhost:8000/api/getProfile', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/vnd.api+json',\n          'Content-Type': 'application/vnd.api+json'\n        }\n      });\n      if (profileResponse.data.data.doctor) {\n        localStorage.setItem('doctorId', profileResponse.data.data.doctor.id);\n        setUserType('doctor');\n        navigate('/doctorDashboard');\n      } else if (profileResponse.data.data.student) {\n        localStorage.setItem('studentId', profileResponse.data.data.student.id);\n        setUserType('student');\n        navigate('/studentDashboard');\n      } else {}\n    } catch (error) {\n      var _error$response;\n      console.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Login failed');\n      // Handle error, possibly update state to show an error message\n    }\n  };\n  const logout = async () => {\n    try {\n      // Make an API call to logout\n      await axios.post('http://localhost:8000/api/logout', {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        }\n      });\n    } catch (error) {\n      console.error('Logout failed', error);\n      // Optionally handle the error, e.g., show a notification\n    }\n\n    // Clear local session data\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('doctorId');\n    localStorage.removeItem('studentId');\n    setAuthToken(null);\n    setUserType(null);\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authToken,\n      userType,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"OQ9nYC1fcJANkW6fcKPtrUdkB/U=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","axios","useNavigate","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","authToken","setAuthToken","localStorage","getItem","userType","setUserType","navigate","login","email","password","response","post","token","user","data","setItem","id","profileResponse","get","headers","doctor","student","error","_error$response","console","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/services/AuthProvider.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst AuthContext = createContext(null);\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [authToken, setAuthToken] = useState(localStorage.getItem('authToken'));\n  const [userType, setUserType] = useState(null); // Add userType to manage different user roles\n  const navigate = useNavigate();\n\n  const login = async (email, password, navigate) => {\n    try {\n      const response = await axios.post('http://localhost:8000/api/login', {\n        email,\n        password,\n      });\n\n      const { token, user } = response.data.data;\n      localStorage.setItem('authToken', token);\n      localStorage.setItem('userId', user.id);\n      setAuthToken(token);\n\n      // Directly determine user type after login\n      // Note: You might want to adjust this based on how you manage user roles\n      const profileResponse = await axios.get('http://localhost:8000/api/getProfile', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/vnd.api+json',\n          'Content-Type': 'application/vnd.api+json'\n        }\n      });\n\n      if (profileResponse.data.data.doctor) {\n        localStorage.setItem('doctorId', profileResponse.data.data.doctor.id);\n        setUserType('doctor');\n        navigate('/doctorDashboard');\n      } else if (profileResponse.data.data.student) {\n        localStorage.setItem('studentId', profileResponse.data.data.student.id);\n        setUserType('student');\n        navigate('/studentDashboard');\n      } else {\n      }\n    } catch (error) {\n      console.error(error.response?.data || 'Login failed');\n      // Handle error, possibly update state to show an error message\n    }\n  };\n\n  const logout = async () => {\n    try {\n      // Make an API call to logout\n      await axios.post('http://localhost:8000/api/logout', {}, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n        },\n      });\n    } catch (error) {\n      console.error('Logout failed', error);\n      // Optionally handle the error, e.g., show a notification\n    }\n\n    // Clear local session data\n    localStorage.removeItem('authToken');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('doctorId');\n    localStorage.removeItem('studentId');\n    setAuthToken(null);\n    setUserType(null);\n    navigate('/login');\n    };\n\n  return (\n    <AuthContext.Provider value={{ authToken, userType, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}