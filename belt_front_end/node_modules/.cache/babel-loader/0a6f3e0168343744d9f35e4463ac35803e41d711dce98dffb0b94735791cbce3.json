{"ast":null,"code":"var _jsxFileName = \"/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/components/ApplicationList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n//import { useNavigate } from 'react-router-dom';\nimport ApplicationElement from './ApplicationElement';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ApplicationList = () => {\n  _s();\n  const queryParameters = new URLSearchParams(window.location.search);\n  const posting_id = queryParameters.get(\"id\");\n  const [displayedApplications, updateDisplayedApplications] = useState([]);\n  useEffect(() => {\n    const LoadApplications = async () => {\n      try {\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n            'Accept': 'application/vnd.api+json',\n            'Content-Type': 'application/vnd.api+json'\n          },\n          params: {\n            \"id\": posting_id\n          }\n        };\n        const applicationResponse = await axios.get('http://localhost:8000/api/doctor/position/applications', config);\n        const data = applicationResponse.data;\n        if (data.status === \"Request was successful\") {\n          const tmp = [];\n          const applications = data.data.applications;\n          for (let i = 0; i < applications.length; i++) {\n            let exists = false;\n            for (let j = 0; j < displayedApplications.length; j++) {\n              if (applications[i].id === displayedApplications[j].id) {\n                exists = true;\n                break;\n              }\n            }\n            if (!exists) {\n              let student_name = \"\";\n              const config2 = {\n                headers: {\n                  'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                  'Accept': 'application/vnd.api+json',\n                  'Content-Type': 'application/vnd.api+json'\n                },\n                params: {\n                  \"id\": applications[i].student_id\n                }\n              };\n              const studentResponse = await axios.get('http://localhost:8000/api/student/', config2);\n              const studentData = studentResponse.data;\n              if (studentData.status === \"Request was successful\") {\n                const student = studentData.data.student;\n                student_name = student.name;\n              }\n              if (student_name !== \"\") {\n                tmp.push({\n                  student: student_name,\n                  id: applications[i].id,\n                  status: applications[i].status\n                });\n              }\n            }\n          }\n          if (tmp.length > 0) {\n            updateDisplayedApplications(tmp);\n          }\n        } else {\n          // Do error handling\n        }\n      } catch (error) {}\n    };\n    LoadApplications();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-75 h-100 container container-default\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Applications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group bg-light overflow-auto\",\n      children: displayedApplications.map((application, i) => /*#__PURE__*/_jsxDEV(ApplicationElement, {\n        name: application.student,\n        application_id: application.id,\n        posting_id: posting_id,\n        status: application.status\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(ApplicationList, \"gwdVSq6+Ty3bJxI3kglCgI1RA8s=\");\n_c = ApplicationList;\nexport default ApplicationList;\nvar _c;\n$RefreshReg$(_c, \"ApplicationList\");","map":{"version":3,"names":["React","useEffect","useState","ApplicationElement","axios","jsxDEV","_jsxDEV","ApplicationList","_s","queryParameters","URLSearchParams","window","location","search","posting_id","get","displayedApplications","updateDisplayedApplications","LoadApplications","config","headers","localStorage","getItem","params","applicationResponse","data","status","tmp","applications","i","length","exists","j","id","student_name","config2","student_id","studentResponse","studentData","student","name","push","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","application","application_id","_c","$RefreshReg$"],"sources":["/Users/brendangignac/Documents/GitHub/499FrontEnd/belt_front_end/src/components/ApplicationList.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\n//import { useNavigate } from 'react-router-dom';\nimport ApplicationElement from './ApplicationElement';\nimport axios from 'axios';\n\nconst ApplicationList = () => {\n    const queryParameters = new URLSearchParams(window.location.search);\n    const posting_id = queryParameters.get(\"id\");\n\n    const [displayedApplications, updateDisplayedApplications] = useState([]);\n\n    useEffect(() => {\n        const LoadApplications = async () => {\n            try {\n                const config = {\n                    headers: {\n                        'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                        'Accept': 'application/vnd.api+json',\n                        'Content-Type': 'application/vnd.api+json'\n                    },\n    \n                    params: {\n                        \"id\": posting_id\n                    }\n                }\n    \n                const applicationResponse = await axios.get('http://localhost:8000/api/doctor/position/applications', config);\n                const data = applicationResponse.data;\n\n                if (data.status === \"Request was successful\") {\n                    const tmp = [];\n                    const applications = data.data.applications;\n\n                    for (let i = 0; i < applications.length; i++) {\n                        let exists = false;\n\n                        for (let j = 0; j < displayedApplications.length; j++) {\n                            if (applications[i].id === displayedApplications[j].id) {\n                                exists = true;\n                                break;\n                            }\n                        }\n\n                        if (!exists) {\n                            let student_name = \"\";\n\n                            const config2 = {\n                                headers: {\n                                    'Authorization': `Bearer ${localStorage.getItem('authToken')}`,\n                                    'Accept': 'application/vnd.api+json',\n                                    'Content-Type': 'application/vnd.api+json'\n                                },\n\n                                params: {\n                                    \"id\": applications[i].student_id\n                                }\n                            }\n\n                            const studentResponse = await axios.get('http://localhost:8000/api/student/', config2);\n                            const studentData = studentResponse.data;\n\n                            if (studentData.status === \"Request was successful\") {\n                                const student = studentData.data.student;\n                                student_name = student.name;\n                            }\n\n                            if (student_name !== \"\") {\n                                tmp.push({\n                                    student: student_name,\n                                    id: applications[i].id,\n                                    status: applications[i].status\n                                });\n                            }\n                        }\n                    }\n\n                    if (tmp.length > 0) {\n                        updateDisplayedApplications(tmp);\n                    }\n                } else {\n                    // Do error handling\n                }\n            } catch (error) {\n\n            }\n        }\n\n        LoadApplications();\n    });\n\n    return(\n        <div className=\"w-75 h-100 container container-default\">\n            <h1>Applications</h1>\n            <ul className=\"list-group bg-light overflow-auto\">\n                {displayedApplications.map((application, i) => (\n                    <ApplicationElement name={application.student} application_id={application.id} posting_id={posting_id} status={application.status} key={i}/>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default ApplicationList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}